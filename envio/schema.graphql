scalar DateTime
scalar BigInt

type Transfer @entity {
  id: ID!
  from: String!
  to: String!
  value: BigInt!
  contract: String!
  blockNumber: Int!
  timestamp: DateTime!
  transactionHash: String!
}

type Approval @entity {
  id: ID!
  owner: String!
  spender: String!
  value: BigInt!
  contract: String!
  blockNumber: Int!
  timestamp: DateTime!
  transactionHash: String!
}

type PoolCreated @entity {
  id: ID!
  token0: String!
  token1: String!
  fee: Int!
  tickSpacing: Int!
  pool: String!
  contract: String!
  blockNumber: Int!
  timestamp: DateTime!
  transactionHash: String!
}

type Swap @entity {
  id: ID!
  sender: String!
  recipient: String!
  amount0: BigInt!
  amount1: BigInt!
  sqrtPriceX96: BigInt!
  liquidity: BigInt!
  tick: Int!
  contract: String!
  blockNumber: Int!
  timestamp: DateTime!
  transactionHash: String!
}

type Mint @entity {
  id: ID!
  sender: String!
  owner: String!
  tickLower: Int!
  tickUpper: Int!
  amount: BigInt!
  amount0: BigInt!
  amount1: BigInt!
  contract: String!
  blockNumber: Int!
  timestamp: DateTime!
  transactionHash: String!
}

type Burn @entity {
  id: ID!
  owner: String!
  tickLower: Int!
  tickUpper: Int!
  amount: BigInt!
  amount0: BigInt!
  amount1: BigInt!
  contract: String!
  blockNumber: Int!
  timestamp: DateTime!
  transactionHash: String!
}